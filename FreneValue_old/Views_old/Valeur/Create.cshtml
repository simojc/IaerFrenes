@using FreneValue.Helpers
@model FreneValue.Models.VAL_DOM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

<h2>Création d'un code valeur</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal"> 
        @*<h4>Créer un nouveau code valeur</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })    
   
            <div class="form-group">
                @Html.LabelFor(model => model.COD_DOM, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-lg-3">
                    @Html.DropDownListFor(model => model.COD_DOM, new SelectList(ViewBag.codedom), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.COD_DOM, "", new { @class = "text-danger" })                   
                </div>
                <div class="col-lg-4">
                    @Html.NoEncodeActionLink("Nouveau Code Domaine", "Add", "Create", "DomaineValeur", routeValues: new { }, htmlAttributes: new { data_modal = "", @class = "btn btn-primary " })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.COD_VAL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.COD_VAL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.COD_VAL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VAL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VAL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VAL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DESCRIP, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DESCRIP, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DESCRIP, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <div class="checkbox">
                        @Html.CheckBoxFor(model => model.ACTIF)
                        @Html.LabelFor(model => model.ACTIF)
                        @Html.ValidationMessageFor(model => model.ACTIF, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Enregistrer" class="btn btn-primary" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Retour à la Liste", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/modalform")
}
